{"payload":{"allShortcutsEnabled":false,"fileTree":{"test/doom.d":{"items":[{"name":"config.el","path":"test/doom.d/config.el","contentType":"file"},{"name":"init.el","path":"test/doom.d/init.el","contentType":"file"},{"name":"packages.el","path":"test/doom.d/packages.el","contentType":"file"}],"totalCount":3},"test":{"items":[{"name":"doom.d","path":"test/doom.d","contentType":"directory"},{"name":"with-dirty-straight.nix","path":"test/with-dirty-straight.nix","contentType":"file"}],"totalCount":2},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"docs","path":"docs","contentType":"directory"},{"name":"modules","path":"modules","contentType":"directory"},{"name":"patches","path":"patches","contentType":"directory"},{"name":"test","path":"test","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"advice.el","path":"advice.el","contentType":"file"},{"name":"checks.nix","path":"checks.nix","contentType":"file"},{"name":"default.nix","path":"default.nix","contentType":"file"},{"name":"doom-modeline-workarounds.el","path":"doom-modeline-workarounds.el","contentType":"file"},{"name":"flake.lock","path":"flake.lock","contentType":"file"},{"name":"flake.nix","path":"flake.nix","contentType":"file"},{"name":"info-workarounds.el","path":"info-workarounds.el","contentType":"file"},{"name":"overrides.nix","path":"overrides.nix","contentType":"file"}],"totalCount":16}},"fileTreeProcessingTime":7.318262,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":436980998,"defaultBranch":"master","name":"nix-doom-emacs","ownerLogin":"nix-community","currentUserCanPush":false,"isFork":true,"isEmpty":false,"createdAt":"2021-12-10T13:02:03.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/33221035?v=4","public":true,"private":false,"isOrgOwned":true},"refInfo":{"name":"master","listCacheKey":"v0:1688693976.0","canEdit":false,"refType":"branch","currentOid":"2c4ba0d77fdfa4495929c8aee814936e722715c5"},"path":"test/doom.d/init.el","currentUser":null,"blob":{"rawBlob":";;; init.el -*- lexical-binding: t; -*-\n\n;; This file controls what Doom modules are enabled and what order they load\n;; in. Remember to run 'doom sync' after modifying it!\n\n;; NOTE Press 'SPC h d h' (or 'C-h d h' for non-vim users) to access Doom's\n;;      documentation. There you'll find a \"Module Index\" link where you'll find\n;;      a comprehensive list of Doom's modules and what flags they support.\n\n;; NOTE Move your cursor over a module's name (or its flags) and press 'K' (or\n;;      'C-c c k' for non-vim users) to view its documentation. This works on\n;;      flags as well (those symbols that start with a plus).\n;;\n;;      Alternatively, press 'gd' (or 'C-c c d') on a module to browse its\n;;      directory (for easy access to its source code).\n\n(doom! :input\n       ;;chinese\n       ;;japanese\n       ;;layout            ; auie,ctsrnm is the superior home row\n\n       :completion\n       company           ; the ultimate code completion backend\n       ;;helm              ; the *other* search engine for love and life\n       ;;ido               ; the other *other* search engine...\n       ;;ivy               ; a search engine for love and life\n       vertico           ; the search engine of the future\n\n       :ui\n       ;;deft              ; notational velocity for Emacs\n       doom              ; what makes DOOM look the way it does\n       doom-dashboard    ; a nifty splash screen for Emacs\n       doom-quit         ; DOOM quit-message prompts when you quit Emacs\n       ;;(emoji +unicode)  ; ðŸ™‚\n       hl-todo           ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW\n       ;;hydra\n       ;;indent-guides     ; highlighted indent columns\n       ;;ligatures         ; ligatures and symbols to make your code pretty again\n       ;;minimap           ; show a map of the code on the side\n       modeline          ; snazzy, Atom-inspired modeline, plus API\n       ;;nav-flash         ; blink cursor line after big motions\n       ;;neotree           ; a project drawer, like NERDTree for vim\n       ophints           ; highlight the region an operation acts on\n       (popup +defaults)   ; tame sudden yet inevitable temporary windows\n       ;;tabs              ; a tab bar for Emacs\n       ;;treemacs          ; a project drawer, like neotree but cooler\n       ;;unicode           ; extended unicode support for various languages\n       vc-gutter         ; vcs diff in the fringe\n       vi-tilde-fringe   ; fringe tildes to mark beyond EOB\n       ;;window-select     ; visually switch windows\n       workspaces        ; tab emulation, persistence & separate workspaces\n       ;;zen               ; distraction-free coding or writing\n\n       :editor\n       (evil +everywhere); come to the dark side, we have cookies\n       file-templates    ; auto-snippets for empty files\n       fold              ; (nigh) universal code folding\n       ;;(format +onsave)  ; automated prettiness\n       ;;god               ; run Emacs commands without modifier keys\n       ;;lispy             ; vim for lisp, for people who don't like vim\n       ;;multiple-cursors  ; editing in many places at once\n       ;;objed             ; text object editing for the innocent\n       ;;parinfer          ; turn lisp into python, sort of\n       ;;rotate-text       ; cycle region at point between text candidates\n       snippets          ; my elves. They type so I don't have to\n       ;;word-wrap         ; soft wrapping with language-aware indent\n\n       :emacs\n       dired             ; making dired pretty [functional]\n       electric          ; smarter, keyword-based electric-indent\n       ;;ibuffer         ; interactive buffer management\n       undo              ; persistent, smarter undo for your inevitable mistakes\n       vc                ; version-control and Emacs, sitting in a tree\n\n       :term\n       ;;eshell            ; the elisp shell that works everywhere\n       ;;shell             ; simple shell REPL for Emacs\n       ;;term              ; basic terminal emulator for Emacs\n       ;;vterm             ; the best terminal emulation in Emacs\n\n       :checkers\n       syntax              ; tasing you for every semicolon you forget\n       ;;(spell +flyspell) ; tasing you for misspelling mispelling\n       ;;grammar           ; tasing grammar mistake every you make\n\n       :tools\n       ;;ansible\n       ;;biblio            ; Writes a PhD for you (citation needed)\n       ;;debugger          ; FIXME stepping through code, to help you add bugs\n       ;;direnv\n       ;;docker\n       ;;editorconfig      ; let someone else argue about tabs vs spaces\n       ;;ein               ; tame Jupyter notebooks with emacs\n       (eval +overlay)     ; run code, run (also, repls)\n       ;;gist              ; interacting with github gists\n       lookup              ; navigate your code and its documentation\n       ;;lsp               ; M-x vscode\n       magit             ; a git porcelain for Emacs\n       ;;make              ; run make tasks from Emacs\n       ;;pass              ; password manager for nerds\n       ;;pdf               ; pdf enhancements\n       ;;prodigy           ; FIXME managing external services & code builders\n       ;;rgb               ; creating color strings\n       ;;taskrunner        ; taskrunner for all your projects\n       ;;terraform         ; infrastructure as code\n       ;;tmux              ; an API for interacting with tmux\n       ;;upload            ; map local to remote projects via ssh/ftp\n\n       :os\n       (:if IS-MAC macos)  ; improve compatibility with macOS\n       ;;tty               ; improve the terminal Emacs experience\n\n       :lang\n       ;;agda              ; types of types of types of types...\n       ;;beancount         ; mind the GAAP\n       ;;cc                ; C > C++ == 1\n       ;;clojure           ; java with a lisp\n       ;;common-lisp       ; if you've seen one lisp, you've seen them all\n       ;;coq               ; proofs-as-programs\n       ;;crystal           ; ruby at the speed of c\n       ;;csharp            ; unity, .NET, and mono shenanigans\n       ;;data              ; config/data formats\n       ;;(dart +flutter)   ; paint ui and not much else\n       ;;dhall\n       ;;elixir            ; erlang done right\n       ;;elm               ; care for a cup of TEA?\n       emacs-lisp        ; drown in parentheses\n       ;;erlang            ; an elegant language for a more civilized age\n       ;;ess               ; emacs speaks statistics\n       ;;factor\n       ;;faust             ; dsp, but you get to keep your soul\n       ;;fortran           ; in FORTRAN, GOD is REAL (unless declared INTEGER)\n       ;;fsharp            ; ML stands for Microsoft's Language\n       ;;fstar             ; (dependent) types and (monadic) effects and Z3\n       ;;gdscript          ; the language you waited for\n       ;;(go +lsp)         ; the hipster dialect\n       ;;(haskell +lsp)    ; a language that's lazier than I am\n       ;;hy                ; readability of scheme w/ speed of python\n       ;;idris             ; a language you can depend on\n       ;;json              ; At least it ain't XML\n       ;;(java +meghanada) ; the poster child for carpal tunnel syndrome\n       ;;javascript        ; all(hope(abandon(ye(who(enter(here))))))\n       ;;julia             ; a better, faster MATLAB\n       ;;kotlin            ; a better, slicker Java(Script)\n       ;;latex             ; writing papers in Emacs has never been so fun\n       ;;lean              ; for folks with too much to prove\n       ;;ledger            ; be audit you can be\n       ;;lua               ; one-based indices? one-based indices\n       markdown          ; writing docs for people to ignore\n       ;;nim               ; python + lisp at the speed of c\n       ;;nix               ; I hereby declare \"nix geht mehr!\"\n       ;;ocaml             ; an objective camel\n       org               ; organize your plain life in plain text\n       ;;php               ; perl's insecure younger brother\n       ;;plantuml          ; diagrams for confusing people more\n       ;;purescript        ; javascript, but functional\n       ;;python            ; beautiful is better than ugly\n       ;;qt                ; the 'cutest' gui framework ever\n       ;;racket            ; a DSL for DSLs\n       ;;raku              ; the artist formerly known as perl6\n       ;;rest              ; Emacs as a REST client\n       ;;rst               ; ReST in peace\n       ;;(ruby +rails)     ; 1.step {|i| p \"Ruby is #{i.even? ? 'love' : 'life'}\"}\n       ;;rust              ; Fe2O3.unwrap().unwrap().unwrap().unwrap()\n       ;;scala             ; java, but good\n       ;;(scheme +guile)   ; a fully conniving family of lisps\n       sh                ; she sells {ba,z,fi}sh shells on the C xor\n       ;;sml\n       ;;solidity          ; do you need a blockchain? No.\n       ;;swift             ; who asked for emoji variables?\n       ;;terra             ; Earth and Moon in alignment for performance.\n       ;;web               ; the tubes\n       ;;yaml              ; JSON, but readable\n       ;;zig               ; C, but simpler\n\n       :email\n       ;;(mu4e +org +gmail)\n       ;;notmuch\n       ;;(wanderlust +gmail)\n\n       :app\n       ;;calendar\n       ;;emms\n       ;;everywhere        ; *leave* Emacs!? You must be joking\n       ;;irc               ; how neckbeards socialize\n       ;;(rss +org)        ; emacs as an RSS reader\n       ;;twitter           ; twitter client https://twitter.com/vnought\n\n       :config\n       ;;literate\n       (default +bindings +smartparens))\n","colorizedLines":["<span class=\"pl-c\"><span class=\"pl-c\">;</span>;; init.el -*- <span class=\"pl-v\">lexical-binding</span>: <span class=\"pl-s\">t</span>; -*-</span>","","<span class=\"pl-c\"><span class=\"pl-c\">;</span>; This file controls what Doom modules are enabled and what order they load</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>; in. Remember to run &#39;doom sync&#39; after modifying it!</span>","","<span class=\"pl-c\"><span class=\"pl-c\">;</span>; NOTE Press &#39;SPC h d h&#39; (or &#39;C-h d h&#39; for non-vim users) to access Doom&#39;s</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      documentation. There you&#39;ll find a &quot;Module Index&quot; link where you&#39;ll find</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      a comprehensive list of Doom&#39;s modules and what flags they support.</span>","","<span class=\"pl-c\"><span class=\"pl-c\">;</span>; NOTE Move your cursor over a module&#39;s name (or its flags) and press &#39;K&#39; (or</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      &#39;C-c c k&#39; for non-vim users) to view its documentation. This works on</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      flags as well (those symbols that start with a plus).</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      Alternatively, press &#39;gd&#39; (or &#39;C-c c d&#39;) on a module to browse its</span>","<span class=\"pl-c\"><span class=\"pl-c\">;</span>;      directory (for easy access to its source code).</span>","","(doom! <span class=\"pl-c1\">:input</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;chinese</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;japanese</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;layout            ; auie,ctsrnm is the superior home row</span>","","       <span class=\"pl-c1\">:completion</span>","       company           <span class=\"pl-c\"><span class=\"pl-c\">;</span> the ultimate code completion backend</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;helm              ; the *other* search engine for love and life</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ido               ; the other *other* search engine...</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ivy               ; a search engine for love and life</span>","       vertico           <span class=\"pl-c\"><span class=\"pl-c\">;</span> the search engine of the future</span>","","       <span class=\"pl-c1\">:ui</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;deft              ; notational velocity for Emacs</span>","       doom              <span class=\"pl-c\"><span class=\"pl-c\">;</span> what makes DOOM look the way it does</span>","       doom-dashboard    <span class=\"pl-c\"><span class=\"pl-c\">;</span> a nifty splash screen for Emacs</span>","       doom-quit         <span class=\"pl-c\"><span class=\"pl-c\">;</span> DOOM quit-message prompts when you quit Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(emoji +unicode)  ; ðŸ™‚</span>","       hl-todo           <span class=\"pl-c\"><span class=\"pl-c\">;</span> highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;hydra</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;indent-guides     ; highlighted indent columns</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ligatures         ; ligatures and symbols to make your code pretty again</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;minimap           ; show a map of the code on the side</span>","       modeline          <span class=\"pl-c\"><span class=\"pl-c\">;</span> snazzy, Atom-inspired modeline, plus API</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;nav-flash         ; blink cursor line after big motions</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;neotree           ; a project drawer, like NERDTree for vim</span>","       ophints           <span class=\"pl-c\"><span class=\"pl-c\">;</span> highlight the region an operation acts on</span>","       (popup +defaults)   <span class=\"pl-c\"><span class=\"pl-c\">;</span> tame sudden yet inevitable temporary windows</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;tabs              ; a tab bar for Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;treemacs          ; a project drawer, like neotree but cooler</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;unicode           ; extended unicode support for various languages</span>","       vc-gutter         <span class=\"pl-c\"><span class=\"pl-c\">;</span> vcs diff in the fringe</span>","       vi-tilde-fringe   <span class=\"pl-c\"><span class=\"pl-c\">;</span> fringe tildes to mark beyond EOB</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;window-select     ; visually switch windows</span>","       workspaces        <span class=\"pl-c\"><span class=\"pl-c\">;</span> tab emulation, persistence &amp; separate workspaces</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;zen               ; distraction-free coding or writing</span>","","       <span class=\"pl-c1\">:editor</span>","       (evil +everywhere)<span class=\"pl-c\"><span class=\"pl-c\">;</span> come to the dark side, we have cookies</span>","       file-templates    <span class=\"pl-c\"><span class=\"pl-c\">;</span> auto-snippets for empty files</span>","       fold              <span class=\"pl-c\"><span class=\"pl-c\">;</span> (nigh) universal code folding</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(format +onsave)  ; automated prettiness</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;god               ; run Emacs commands without modifier keys</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;lispy             ; vim for lisp, for people who don&#39;t like vim</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;multiple-cursors  ; editing in many places at once</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;objed             ; text object editing for the innocent</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;parinfer          ; turn lisp into python, sort of</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;rotate-text       ; cycle region at point between text candidates</span>","       snippets          <span class=\"pl-c\"><span class=\"pl-c\">;</span> my elves. They type so I don&#39;t have to</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;word-wrap         ; soft wrapping with language-aware indent</span>","","       <span class=\"pl-c1\">:emacs</span>","       dired             <span class=\"pl-c\"><span class=\"pl-c\">;</span> making dired pretty [functional]</span>","       electric          <span class=\"pl-c\"><span class=\"pl-c\">;</span> smarter, keyword-based electric-indent</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ibuffer         ; interactive buffer management</span>","       undo              <span class=\"pl-c\"><span class=\"pl-c\">;</span> persistent, smarter undo for your inevitable mistakes</span>","       vc                <span class=\"pl-c\"><span class=\"pl-c\">;</span> version-control and Emacs, sitting in a tree</span>","","       <span class=\"pl-c1\">:term</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;eshell            ; the elisp shell that works everywhere</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;shell             ; simple shell REPL for Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;term              ; basic terminal emulator for Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;vterm             ; the best terminal emulation in Emacs</span>","","       <span class=\"pl-c1\">:checkers</span>","       syntax              <span class=\"pl-c\"><span class=\"pl-c\">;</span> tasing you for every semicolon you forget</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(spell +flyspell) ; tasing you for misspelling mispelling</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;grammar           ; tasing grammar mistake every you make</span>","","       <span class=\"pl-c1\">:tools</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ansible</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;biblio            ; Writes a PhD for you (citation needed)</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;debugger          ; FIXME stepping through code, to help you add bugs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;direnv</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;docker</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;editorconfig      ; let someone else argue about tabs vs spaces</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ein               ; tame Jupyter notebooks with emacs</span>","       (<span class=\"pl-c1\">eval</span> +overlay)     <span class=\"pl-c\"><span class=\"pl-c\">;</span> run code, run (also, repls)</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;gist              ; interacting with github gists</span>","       lookup              <span class=\"pl-c\"><span class=\"pl-c\">;</span> navigate your code and its documentation</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;lsp               ; M-x vscode</span>","       magit             <span class=\"pl-c\"><span class=\"pl-c\">;</span> a git porcelain for Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;make              ; run make tasks from Emacs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;pass              ; password manager for nerds</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;pdf               ; pdf enhancements</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;prodigy           ; FIXME managing external services &amp; code builders</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;rgb               ; creating color strings</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;taskrunner        ; taskrunner for all your projects</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;terraform         ; infrastructure as code</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;tmux              ; an API for interacting with tmux</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;upload            ; map local to remote projects via ssh/ftp</span>","","       <span class=\"pl-c1\">:os</span>","       (<span class=\"pl-c1\">:if</span> IS-MAC macos)  <span class=\"pl-c\"><span class=\"pl-c\">;</span> improve compatibility with macOS</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;tty               ; improve the terminal Emacs experience</span>","","       <span class=\"pl-c1\">:lang</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;agda              ; types of types of types of types...</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;beancount         ; mind the GAAP</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;cc                ; C &gt; C++ == 1</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;clojure           ; java with a lisp</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;common-lisp       ; if you&#39;ve seen one lisp, you&#39;ve seen them all</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;coq               ; proofs-as-programs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;crystal           ; ruby at the speed of c</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;csharp            ; unity, .NET, and mono shenanigans</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;data              ; config/data formats</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(dart +flutter)   ; paint ui and not much else</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;dhall</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;elixir            ; erlang done right</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;elm               ; care for a cup of TEA?</span>","       emacs-lisp        <span class=\"pl-c\"><span class=\"pl-c\">;</span> drown in parentheses</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;erlang            ; an elegant language for a more civilized age</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ess               ; emacs speaks statistics</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;factor</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;faust             ; dsp, but you get to keep your soul</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;fortran           ; in FORTRAN, GOD is REAL (unless declared INTEGER)</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;fsharp            ; ML stands for Microsoft&#39;s Language</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;fstar             ; (dependent) types and (monadic) effects and Z3</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;gdscript          ; the language you waited for</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(go +lsp)         ; the hipster dialect</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(haskell +lsp)    ; a language that&#39;s lazier than I am</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;hy                ; readability of scheme w/ speed of python</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;idris             ; a language you can depend on</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;json              ; At least it ain&#39;t XML</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(java +meghanada) ; the poster child for carpal tunnel syndrome</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;javascript        ; all(hope(abandon(ye(who(enter(here))))))</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;julia             ; a better, faster MATLAB</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;kotlin            ; a better, slicker Java(Script)</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;latex             ; writing papers in Emacs has never been so fun</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;lean              ; for folks with too much to prove</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ledger            ; be audit you can be</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;lua               ; one-based indices? one-based indices</span>","       markdown          <span class=\"pl-c\"><span class=\"pl-c\">;</span> writing docs for people to ignore</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;nim               ; python + lisp at the speed of c</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;nix               ; I hereby declare &quot;nix geht mehr!&quot;</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;ocaml             ; an objective camel</span>","       <span class=\"pl-c1\">org</span>               <span class=\"pl-c\"><span class=\"pl-c\">;</span> organize your plain life in plain text</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;php               ; perl&#39;s insecure younger brother</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;plantuml          ; diagrams for confusing people more</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;purescript        ; javascript, but functional</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;python            ; beautiful is better than ugly</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;qt                ; the &#39;cutest&#39; gui framework ever</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;racket            ; a DSL for DSLs</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;raku              ; the artist formerly known as perl6</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;rest              ; Emacs as a REST client</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;rst               ; ReST in peace</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(ruby +rails)     ; 1.step {|i| p &quot;Ruby is #{i.even? ? &#39;love&#39; : &#39;life&#39;}&quot;}</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;rust              ; Fe2O3.unwrap().unwrap().unwrap().unwrap()</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;scala             ; java, but good</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(scheme +guile)   ; a fully conniving family of lisps</span>","       sh                <span class=\"pl-c\"><span class=\"pl-c\">;</span> she sells {ba,z,fi}sh shells on the C xor</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;sml</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;solidity          ; do you need a blockchain? No.</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;swift             ; who asked for emoji variables?</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;terra             ; Earth and Moon in alignment for performance.</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;web               ; the tubes</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;yaml              ; JSON, but readable</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;zig               ; C, but simpler</span>","","       <span class=\"pl-c1\">:email</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(mu4e +org +gmail)</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;notmuch</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(wanderlust +gmail)</span>","","       <span class=\"pl-c1\">:app</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;calendar</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;emms</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;everywhere        ; *leave* Emacs!? You must be joking</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;irc               ; how neckbeards socialize</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;(rss +org)        ; emacs as an RSS reader</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;twitter           ; twitter client https://twitter.com/vnought</span>","","       <span class=\"pl-c1\">:config</span>","       <span class=\"pl-c\"><span class=\"pl-c\">;</span>;literate</span>","       (<span class=\"pl-c1\">default</span> +bindings +smartparens))"],"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/nix-community/nix-doom-emacs/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/nix-community/nix-doom-emacs/security/dependabot","repoSecurityAndAnalysisPath":"/nix-community/nix-doom-emacs/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"init.el","displayUrl":"https://github.com/nix-community/nix-doom-emacs/blob/master/test/doom.d/init.el?raw=true","headerInfo":{"blobSize":"9.28 KB","deleteInfo":{"deletePath":null,"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"7e0ae31","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fnix-community%2Fnix-doom-emacs%2Fblob%2Fmaster%2Ftest%2Fdoom.d%2Finit.el","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"191","truncatedSloc":"175"},"mode":"file"},"image":false,"isCodeownersFile":null,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Emacs Lisp","large":false,"loggedIn":false,"newDiscussionPath":"/nix-community/nix-doom-emacs/discussions/new","newIssuePath":"/nix-community/nix-doom-emacs/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/nix-community/nix-doom-emacs/blob/master/test/doom.d/init.el","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/nix-community/nix-doom-emacs/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":"/nix-community/.github/blob/34302c2ae47235160e331312d5c765836cb779bb/FUNDING.yml","repoOwner":"nix-community","repoName":"nix-doom-emacs","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":true,"symbols":[]}},"csrf_tokens":{"/nix-community/nix-doom-emacs/branches":{"post":"5dYU966vDoJ39WBasuHTzgApqs7ZOgEadP5wT0-xnj549_9Pyg5LOaKBumTmzbmw6ylvHSYCNlbg1SQNtdBNWw"}}},"title":"nix-doom-emacs/test/doom.d/init.el at master Â· nix-community/nix-doom-emacs","locale":"en"}